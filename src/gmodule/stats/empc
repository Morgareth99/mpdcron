#!/usr/bin/env bash
# vim: set sw=4 sts=4 et tw=80 :
# Copyright 2010 Ali Polatel <alip@exherbo.org>
# Distributed under the terms of the GNU General Public License v2

REGEX_LISTINFO="([0-9]+): Play_Count:([0-9]+) Love:([0-9]+) Kill:([0-9]+) Rating:([0-9]+)"
REGEX_LISTINFO_ALL="${REGEX_LISTINFO} (.*)"

die() {
    echo "${@}" >&2
    exit 1
}

cmd_status() {
    local info

    mpc "${args[@]}" status
    [[ ${?} != 0 ]] && exit ${?}

    info="$(eugene listinfo 2>/dev/null)"
    [[ ${?} != 0 ]] && exit 0

    if [[ "${info}" =~ ${REGEX_LISTINFO} ]]; then
        echo -n "song>   count: ${BASH_REMATCH[2]}"
        echo -n "  love: ${BASH_REMATCH[3]}"
        echo -n "  rating: ${BASH_REMATCH[5]}"
        if [[ ${BASH_REMATCH[4]} > 0 ]]; then
            echo -n "  killed: yes"
        else
            echo -n "  killed: no"
        fi
        echo "  id: ${BASH_REMATCH[1]}"
    fi

    info="$(eugene listinfo --artist 2>/dev/null)"
    [[ ${?} != 0 ]] && exit 0

    if [[ "${info}" =~ ${REGEX_LISTINFO} ]]; then
        echo -n "artist> count: ${BASH_REMATCH[2]}"
        echo -n "  love: ${BASH_REMATCH[3]}"
        echo -n "  rating: ${BASH_REMATCH[5]}"
        if [[ ${BASH_REMATCH[4]} > 0 ]]; then
            echo -n "  killed: yes"
        else
            echo -n "  killed: no"
        fi
        echo "  id: ${BASH_REMATCH[1]}"
    fi

    info="$(eugene listinfo --album 2>/dev/null)"
    [[ ${?} != 0 ]] && exit 0

    if [[ "${info}" =~ ${REGEX_LISTINFO_ALL} ]]; then
        echo -n "album>  count: ${BASH_REMATCH[2]}"
        echo -n "  love: ${BASH_REMATCH[3]}"
        echo -n "  rating: ${BASH_REMATCH[5]}"
        if [[ ${BASH_REMATCH[4]} > 0 ]]; then
            echo -n "  killed: yes"
        else
            echo -n "  killed: no"
        fi
        echo "  id: ${BASH_REMATCH[1]} (${BASH_REMATCH[6]})"
    fi

    info="$(eugene listinfo --genre 2>/dev/null)"
    [[ ${?} != 0 ]] && exit 0

    if [[ "${info}" =~ ${REGEX_LISTINFO_ALL} ]]; then
        echo -n "genre>  count: ${BASH_REMATCH[2]}"
        echo -n "  love: ${BASH_REMATCH[3]}"
        echo -n "  rating: ${BASH_REMATCH[5]}"
        if [[ ${BASH_REMATCH[4]} > 0 ]]; then
            echo -n "  killed: yes"
        else
            echo -n "  killed: no"
        fi
        echo "  id: ${BASH_REMATCH[1]} (${BASH_REMATCH[6]})"
    fi

    exit 0
}

# Sanity checks
[[ -x "$(type -P eugene)" ]] || die "eugene not found in PATH"
[[ -x "$(type -P mpc)" ]] || die "mpc not found in PATH"

cmd="status"
args=()
while ((${#})); do
    case "${1}" in
        -*)
            args+=("${1}")
            ;;
        *)
            cmd="${1}"
            ;;
    esac
    shift
done

case "${cmd}" in
    status)
        cmd_status
        ;;
    *)
        mpc "${args[@]}" "${cmd}"
        exit "${?}"
        ;;
esac
